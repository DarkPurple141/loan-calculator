{"version":3,"sources":["store/loan/models.ts","store/profile/index.ts","store/loan/index.ts","store/costs/index.ts","store/root.ts","store/loan/actions.ts","store/costs/actions.ts","store/profile/actions.ts","store/index.js","containers/loan-info/index.tsx","containers/my-info/index.tsx","containers/upfront-costs/index.js","store/selectors.ts","containers/summary/index.tsx","containers/index.tsx","serviceWorker.js","index.js"],"names":["REPAYMENT_TYPE","REPAYMENT_FREQUENCY","initialState","incomeA","value","period","incomeB","livingExpenses","label","cost","amount","repaymentType","PRINCIPAL_AND_INTEREST","repaymentFrequency","FORTNIGHTLY","rate","conveyancing","bankFees","renovations","stampDuty","combineReducers","loan","state","arguments","length","undefined","action","type","data","Object","objectSpread","costs","profile","console","info","_Object$entries$","slicedToArray","entries","key","map","item","createStore","rootReducer","LoanInfo","onChangeHandler","e","Number","target","_this","props","updateLoan","_this$props","this","borrowing","react_default","a","createElement","className","name","onChange","data-percent","Component","connect","_ref","repayments","dispatch","payload","defineProperty","setLoan","defaultState","MyInfo","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onUpdateIncome","event","updateIncome","onUpdateExpense","updateExpense","onButtonClick","setState","_this2","_ref2","Fragment","placeholder","currentTarget","concat","onClick","_ref3","setProfile","Costs","sum","acc","curr","multiplier","p","m","getSummary","getIncome","reduce","getLivingExpenses","values","getCosts","n","WEEKLY","MONTHLY","periods","r","exponent","Math","pow","getLoanCosts","Summary","position","store","App","my_info","loan_info","upfront_costs","summary","Boolean","window","location","hostname","match","ReactDOM","render","es","containers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff204a1e.chunk.js","sourcesContent":["export default interface LoanState {\n    /* borrowing amount */\n    amount: number,\n    /* eg 30 years */\n    period: number,\n    /* as defined */\n    repaymentType?: REPAYMENT_TYPE,\n    /* repayment frequency */\n    repaymentFrequency: REPAYMENT_FREQUENCY,\n    /* interest rate */\n    rate: number,\n}\n\nexport enum REPAYMENT_TYPE {\n    INTEREST_ONLY = 'Interest only',\n    PRINCIPAL_AND_INTEREST = 'Principle and interest'\n}\n\nexport enum REPAYMENT_FREQUENCY {\n    WEEKLY = 'weekly',\n    FORTNIGHTLY = 'fortnightly',\n    MONTHLY = 'monthly',\n}\n","import ProfileState from './models'\nimport { SET_PROFILE, UPDATE_EXPENSE } from './actions'\n\nconst initialState: ProfileState = {\n    incomeA: {\n        value: 0,\n        period: \"Monthly\"\n    },\n    incomeB: {\n        value: 0,\n        period: \"Monthly\"\n    },\n    livingExpenses: [{\n        label: 'daycare',\n        cost: 100\n    }]\n}\n\nexport default function (\n    state: ProfileState = initialState,\n    action: ReduxAction\n): ProfileState {\n    const { type, data } = action\n    console.info('here', data, type)\n\n    switch (type) {\n        case SET_PROFILE:\n            return {\n                ...state,\n                ...data\n            }\n        case UPDATE_EXPENSE:\n            const [key, value] = Object.entries(data)[0]\n            console.info('here', key, value)\n            return {\n                ...state,\n                livingExpenses: state.livingExpenses\n                    .map(item => {\n                        if (item.label === key) {\n                            item.cost = value\n                        }\n                        return item\n                    })\n            }\n\n        default: return state\n    }\n}","import { SET_LOAN } from './actions'\nimport LoanState, { REPAYMENT_TYPE, REPAYMENT_FREQUENCY } from './models'\n\nconst initialState: LoanState = {\n    amount: 0,\n    period: 25,\n    repaymentType: REPAYMENT_TYPE.PRINCIPAL_AND_INTEREST,\n    repaymentFrequency: REPAYMENT_FREQUENCY.FORTNIGHTLY,\n    rate: 3,\n}\n\nexport default function (\n    state: LoanState = initialState,\n    action: ReduxAction\n): LoanState \n{\n    const { type, data } = action\n\n    switch (type) {\n        case SET_LOAN: \n            return {\n                ...state,\n                ...data\n            }\n        default:\n            return state\n    }\n}","import PurchaseCosts from './models'\nimport { SET_COSTS } from './actions';\n\nconst initialState: PurchaseCosts = {\n    conveyancing: 1500,\n    bankFees: 500,\n    renovations: 0,\n    stampDuty: 0\n}\n\nexport default function (\n    state = initialState,\n    action: ReduxAction\n): PurchaseCosts {\n    const { type, data } = action\n\n    switch (type) {\n        case SET_COSTS:\n            return {\n                ...state,\n                ...data\n            }\n        default: \n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport profile from './profile'\nimport loan from './loan'\nimport costs from './costs'\n\nexport default combineReducers({ loan, costs, profile })","export const SET_LOAN = 'SET_LOAN'\n\nexport const setLoan = ({\n    value,\n    key\n}: ActionPayload): ReduxAction => ({\n    type: SET_LOAN,\n    data: {\n        [key]: value\n    }\n})\n","export const SET_COSTS = 'SET_COSTS'\n\nexport const setCosts = ({\n    value,\n    key\n}: ActionPayload): ReduxAction => ({\n    type: SET_COSTS,\n    data: {\n        [key]: value\n    }\n})","export const SET_PROFILE = 'SET_PROFILE'\nexport const UPDATE_EXPENSE = 'UPDATE_EXPENSE'\n\n// action creators\nexport const setProfile = ({\n    value,\n    key\n}: ActionPayload): ReduxAction => ({\n    type: SET_PROFILE,\n    data: {\n        [key]: value\n    }\n})\n\nexport const updateExpense = ({\n    key,\n    value\n}: ActionPayload): ReduxAction => ({\n    type: UPDATE_EXPENSE,\n    data: {\n        [key]: value\n    }\n})\n","import { createStore } from 'redux'\nimport rootReducer from './root.ts'\n\nexport default createStore(rootReducer)","import React, { Component, Dispatch } from 'react'\nimport { connect } from 'react-redux'\nimport State from '../../store/selectors'\nimport { setLoan } from '../../store/loan/actions'\nimport { REPAYMENT_FREQUENCY } from '../../store/loan/models'\n\ninterface LoanProps {\n    rate: number,\n    period: number,\n    repayments: REPAYMENT_FREQUENCY,\n    borrowing: number,\n}\n\ninterface LoanActions {\n    updateLoan: Function\n}\n\nconst mapStateToProps = ({ loan }: State): LoanProps => {\n    return {\n        rate: loan.rate,\n        period: loan.period,\n        repayments: loan.repaymentFrequency,\n        borrowing: loan.amount\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ReduxAction>): LoanActions => {\n    return {\n        updateLoan: (payload: ActionPayload) => dispatch(\n            setLoan(payload)\n        )\n    }\n}\n\nclass LoanInfo extends Component<LoanProps & LoanActions> {\n\n    onChangeHandler = (key: string) => (e: React.FormEvent<HTMLInputElement>): void => {    \n        const value = Number((e.target as any).value)\n\n        this.props.updateLoan({\n            key,\n            value\n        })\n    }\n\n    render() {\n        const { rate, period, borrowing } = this.props\n        return (\n            <div className='loan-info'>\n                <h2>Loan Info</h2>\n                <label>Amount to borrow</label>\n                <input type=\"number\" name=\"amount\" value={borrowing} onChange={this.onChangeHandler('amount')}/>\n                <label>Rate</label>\n                <input type=\"number\" name=\"rate\" data-percent=\"\" value={rate} onChange={this.onChangeHandler('rate')}/>\n                <label>Loan Period (years)</label>\n                <input type=\"number\" name=\"period\" value={period} onChange={this.onChangeHandler('period')}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoanInfo)","import React, { Component, Dispatch } from 'react'\nimport { connect } from 'react-redux';\n\nimport State from '../../store/selectors';\nimport { setProfile, updateExpense } from '../../store/profile/actions';\nimport ProfileState from '../../store/profile/models';\n\ninterface ProfileDispatchers {\n    updateIncome: (key: string, value: number) => void,\n    updateExpense: (key: string, cost: number) => void\n}\n\ninterface FormState {\n    label: string, \n    cost: number\n}\n\nconst defaultState = {\n    label: 'Your expense name',\n    cost: 0\n}\n\nclass MyInfo extends Component<ProfileState & ProfileDispatchers, FormState> {\n\n    constructor(props: ProfileState & ProfileDispatchers) {\n        super(props)\n        this.state = defaultState\n    }\n\n    onUpdateIncome = (key: string) => (event: React.FormEvent<HTMLInputElement>) => {\n        const { value } = (event.target as any)\n        this.props.updateIncome(key, value)\n    }\n\n    onUpdateExpense = (key: string, cost: number) => {\n        this.props.updateExpense(key, cost)\n    }\n\n    onButtonClick = () => {\n        this.setState(defaultState)\n    }\n\n    render() {\n        const { incomeA, incomeB, livingExpenses } = this.props\n        return (\n            <div className='profile'>\n                <h2>Profile</h2>\n                <label>Your Income</label>\n                <input type=\"number\" name=\"incomeA\" value={incomeA.value} onChange={this.onUpdateIncome('incomeA')}/>\n                <label>Partner Income</label>\n                <input type=\"number\" name=\"incomeB\" value={incomeB.value} onChange={this.onUpdateIncome('incomeB')}/>\n                <hr/>\n                <h2>Living Expenses</h2>\n                { livingExpenses && livingExpenses.map(\n                    ({ label, cost }) => \n                        <React.Fragment key={label}>\n                            <label>{ label }</label>\n                            <input type=\"number\" name=\"rate\" value={cost} onChange={(e: any) => this.onUpdateExpense(label, Number(e.target.value))}/> \n                        </React.Fragment>\n                )}\n                <p>Add an expense</p>\n                <input type=\"text\"   name=\"newLabel\" value={this.state.label} placeholder={defaultState.label}  onChange={(e: any) => this.setState({ label: e.currentTarget.value })} />\n                <input type=\"number\" name=\"newCost\"  value={this.state.cost} placeholder={`$${defaultState.cost}`} onChange={(e: any) => this.setState({ cost: e.currentTarget.value })}/> \n                <button onClick={this.onButtonClick}>Add</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ profile }: State): ProfileState => {\n    return {\n        ...profile\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ReduxAction>): ProfileDispatchers => {\n    return {\n        updateIncome: (key: string, value: number) => dispatch(\n            setProfile({\n                key,\n                value\n            })\n        ),\n        updateExpense: (key: string, value: number) => dispatch(\n            updateExpense({\n                key,\n                value\n            })\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyInfo)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({ costs }) => {\n    return {\n        ...costs\n    }\n}\n\nclass Costs extends Component {\n    render() {\n        return (\n            <div className='costs'>\n                <h2>Costs</h2>\n                {Object.entries(this.props).map(([key, value]) => <p>{ key }: { value }</p>)}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Costs)","import Costs from './costs/models'\nimport Profile from './profile/models'\nimport Loan, { REPAYMENT_FREQUENCY } from './loan/models'\n\nexport default interface State {\n    costs: Costs,\n    profile: Profile,\n    loan: Loan\n}\n\nconst sum = (acc: number, curr: number) => acc + curr\nconst multiplier = (p: Period): number => {\n    let m: number\n\n    switch (p) {\n        case \"Weekly\": m = 52\n        case \"Fortnightly\": m = 26\n        case \"Monthly\": m = 12\n        case \"Yearly\": default: m = 1\n    }\n\n    return m\n}\n\nexport const getIncome = (profile: Profile): number => {\n    const { incomeA, incomeB } = profile\n\n    const annualisedIncomeA = incomeA.value * multiplier(incomeA.period)\n    const annualisedIncomeB = incomeB.value * multiplier(incomeB.period)\n\n    return annualisedIncomeA + annualisedIncomeB\n}\n\nexport const getLivingExpenses = (profile: Profile): number => {\n    const expenses = profile.livingExpenses || []\n    return expenses\n        .map(({ cost }) => cost)\n        .reduce(sum, 0)\n}\n\nexport const getCosts = (costs: Costs): number => {\n    return Object.values(costs)\n        .reduce(sum, 0)\n}\n\nexport const getLoanCosts = (loan: Loan) => {\n    const { period, amount, rate, repaymentFrequency } = loan\n\n    let n: number\n\n    switch (repaymentFrequency) {\n        case REPAYMENT_FREQUENCY.WEEKLY: n = 52;\n        case REPAYMENT_FREQUENCY.FORTNIGHTLY: n = 26;\n        case REPAYMENT_FREQUENCY.MONTHLY: n = 12;\n        default: n = 12;\n    }\n\n    const periods = n * period\n    const r = (rate / n)/100\n    const exponent = Math.pow(1 + r, periods)\n\n    return (amount * exponent * r) / (exponent - 1)\n}\n\nexport const getSummary = ({ costs, profile, loan }: State): number => {\n\n    const income         = getIncome(profile)\n    const livingExpenses = getLivingExpenses(profile)\n    const expectedCosts  = getCosts(costs)\n    const loanCosts      = getLoanCosts(loan)\n\n    return income - livingExpenses - expectedCosts - loanCosts\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport State, { getSummary } from '../../store/selectors';\n\nconst mapStateToProps = (store: State) => ({\n    position: getSummary(store)\n})\n\ninterface SummaryProps {\n    position: number\n}\n\nclass Summary extends Component<SummaryProps> {\n    render() {\n        return (\n            <div className='Summary'>\n                <h2>Summary</h2>       \n                <p>position: { this.props.position }</p>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Summary)","import React from 'react'\nimport LoanInfo from './loan-info'\nimport MyInfo from './my-info'\nimport UpfrontCosts from './upfront-costs'\nimport Summary from './summary'\n\nconst App = () => (\n  <main>\n    <h1>How much can I afford?</h1>\n    <p>People often tackle this sort of thing upside down; trying to find additional money to stretch themselves rather than making a realistic estimate of what they can truly afford. This tool tries to properly quantify that to help you avoid unnecessary financial stress and to provide a better overview of what sort of property price you should be targeting.</p>\n    <MyInfo />\n    <LoanInfo />\n    <UpfrontCosts />\n    <Summary />\n  </main>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css'\nimport Root from './containers/index'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Root />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}